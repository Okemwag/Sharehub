version: '3.1'

services:
  web:
    build: ./client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
    depends_on:
      - backend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080

  backend:
    build:
      context: .
    
    ports:
      - 8000:8000
    depends_on:
      - db

  celery:
    image: celery:5.2.0
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - rabbitmq
      - redis
      - db
    command: celery -A backend worker --loglevel=info


  redis:
    image: redis:7.2.4-alpine
    ports:
      - 6379:6379

  db:
    image: postgres:15
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - 5434:5432


  rabbitmq:
    image: rabbitmq:3.13-alpine
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

    ports:
      - 5672:5672
      - 15672:15672
  
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node


volumes:
  postgres_data:

networks:
  sharehub:
    external: false
